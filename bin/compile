#!/usr/bin/env bash

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd "$(dirname "${0:-}")"; cd ..; pwd)

DARTSASS_VERSION="${DARTSASS_VERSION:-1.43.1}"
DARTSASS_SOURCE_FILE="dart-sass-$DARTSASS_VERSION-linux-x64.tar.gz"
DARTSASS_URL="https://github.com/sass/dart-sass/releases/download/$DARTSASS_VERSION/$DARTSASS_SOURCE_FILE"

CACHE_FILE="$CACHE_DIR/sass-$DARTSASS_VERSION"

header() {
  echo "\n" || true
  echo "-----> $*" || true
}

output() {
  while IFS= read -r LINE; do
    # do not indent headers that are being piped through the output
    if [[ "$LINE" =~ ^-----\>.* ]]; then
      echo "$LINE" || true
    else
      echo "       $LINE" || true
    fi
  done
}

create_env() {
  # write_profile "$BP_DIR" "$BUILD_DIR"
  write_export "$BP_DIR" "$BUILD_DIR"
  # export_env_dir "$ENV_DIR"
  # create_default_env "$YARN"
}

write_export() {
  local bp_dir="$1"
  local build_dir="$2"

  # only write the export script if the buildpack directory is writable.
  # this may occur in situations outside of Heroku, such as running the
  # buildpacks locally.
  if [ -w "$bp_dir" ]; then
    # echo "export PATH=\"$build_dir/.heroku/node/bin:$build_dir/.heroku/yarn/bin:\$PATH:$build_dir/node_modules/.bin\"" > "$bp_dir/export"
    # echo "export NODE_HOME=\"$build_dir/.heroku/node\"" >> "$bp_dir/export"

    echo "echo \"dartsassahoy\"" > "$bp_dir/export"
    echo "export PATH=\"$PATH:$build_dir/.heroku/dartsass\"" >> "$bp_dir/export"
  fi
}

header "BUILD_DIR"
echo "$BUILD_DIR" | output

header "CACHE_DIR"
echo "$CACHE_DIR" | output

header "ENV_DIR"
echo "$ENV_DIR" | output

header "BP_DIR"
echo "$BP_DIR" | output

header "cwd"
pwd | output

header "Installing dartsass"

cd $BUILD_DIR

echo "Downloading $DARTSASS_URL" | output

code=$(curl "$DARTSASS_URL" -L --silent --fail --retry 5 --retry-max-time 15 -o ./$DARTSASS_SOURCE_FILE --write-out "%{http_code}")

if [ "$code" != "200" ]; then
  echo "Unable to download dartsass: $code" | output && exit 1
fi

echo "Unpacking the archive" | output

tar xzf ./$DARTSASS_SOURCE_FILE dart-sass/sass --strip-components 1

if [ "$?" != "0" ]; then
  echo "Failed to unpack" | output && exit 1
fi

rm ./$DARTSASS_SOURCE_FILE

mkdir -p $BUILD_DIR/.heroku/dartsass
mv sass $BUILD_DIR/.heroku/dartsass

create_env

# echo "echo \"dartsassahoy\"" > $BUILD_DIR/export
# echo "export PATH=\"$PATH:$BUILD_DIR/vendor/dartsass\"" >> $BUILD_DIR/export
# chmod +x $BUILD_DIR/export

# echo $BUILD_DIR/export
# ls -la $BUILD_DIR/export
# cat $BUILD_DIR/export
